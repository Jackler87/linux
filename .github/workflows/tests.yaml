name: kernel_test

on:
  push:
  workflow_dispatch:

jobs:
  kernel:
    runs-on: ubuntu-latest  # defines the distro GitHub uses as a VM
    steps:
    - uses: actions/checkout@v2  # checkout current branch to see changes and latest commits

    # Install dependencies (like compilers, etc.)
    - name: Install dependencies
      run: sudo apt install -y bc binutils bison dwarves flex gcc git gnupg2 gzip libelf-dev libncurses5-dev libssl-dev make openssl pahole perl-base rsync tar xz-utils ccache linux-headers-$(uname -r)

    # Set up ccache (optional: configure cache size if needed)
    - name: Configure ccache
      run: |
        ccache -M 5G  # Set cache size to 5GB
        export CC="ccache gcc"  # Use ccache with gcc

   # - name: selftests
    #  run: |
     #   make headers  # Set default config
      #  make -C tools/testing/selftests 
       # make -C tools/testing/selftests run_tests
       
   # - name: KUnitTest
    #  run: |
     #   ./tools/testing/kunit/kunit.py run
    #- name: Set execute permissions for the test script
     # run: | 
      #  chmod +x ./tools/testing/crypto/chacha20-s390/run-tests.sh
      
    #- name: CryptoTest
     # run: |
      #  ./tools/testing/crypto/chacha20-s390/run-tests.sh
    - name: Compile CXL Tests
      run: |
       cd tools/testing/cxl
       gcc -o config_check config_check.c
       gcc -o cxl_acpi_test cxl_acpi_test.c
       gcc -o cxl_core_exports cxl_core_exports.c
       gcc -o cxl_core_test cxl_core_test.c
       gcc -o cxl_mem_test cxl_mem_test.c
       gcc -o cxl_pmem_test cxl_pmem_test.c
       gcc -o cxl_port_test cxl_port_test.c
       gcc -o mock_acpi mock_acpi.c

    - name: Run CXL Tests
      run: |
       cd tools/testing/cxl
       ./config_check
       ./cxl_acpi_test
       ./cxl_core_exports
       ./cxl_core_test
       ./cxl_mem_test
       ./cxl_pmem_test
       ./cxl_port_test
       ./mock_acpi
