name: kernel_build

on:
  push:
  workflow_dispatch:

jobs:
  kernel:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Ensure ccache directory exists
        run: mkdir -p ~/.ccache

      - name: Set up ccache
        uses: actions/cache@v4
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-ccache-${{ hashFiles('**/*.c', '**/*.h') }}
          restore-keys: |
            ${{ runner.os }}-ccache-

      - name: Install dependencies
        run: sudo apt-get install -y bc binutils bison dwarves flex gcc git gnupg2 gzip libelf-dev libncurses5-dev libssl-dev make openssl pahole perl-base rsync tar xz-utils ccache

      - name: Configure ccache
        run: |
          ccache -M 5G
          export CC="ccache gcc"

      - name: Build kernel
        run: |
          make defconfig
          make -j$(nproc)

      - name: Build kernel modules
        run: make modules
        
      - name: Install kernel modules
        run: |
          mkdir -p release/modules
          make INSTALL_MOD_PATH=$(pwd)/release/modules modules_install        

      - name: Verify build outputs
        run: |
          ls -R arch/x86/boot

      - name: Determine Kernel Release Version
        id: kernel_version
        env:
          CUSTOM_SUFFIX: "-we-are-with-you"
        run: |
          echo "KERNELRELEASE=$(make kernelrelease)${CUSTOM_SUFFIX}" >> $GITHUB_ENV
          
      - name: Create Initrd
        run: |
          sudo update-initramfs -c -k $(make kernelrelease)
          mkdir -p release

      - name: Copy kernel files to staging directory
        run: |
          sleep 10
          mkdir -p release
          cp arch/x86/boot/bzImage release/vmlinuz-${{ env.KERNELRELEASE }}
          cp System.map release/System.map-${{ env.KERNELRELEASE }}
          cp vmlinux release/vmlinux-${{ env.KERNELRELEASE }}
          cp /boot/initrd.img-${{ env.KERNELRELEASE }} release/initrd-${{ env.KERNELRELEASE }}.img
          cp .config release/config-${{ env.KERNELRELEASE }}

      - name: Package kernel files
        run: |
          tar -czf kernel-files-${{ env.KERNELRELEASE }}.tar.gz -C release .
          
      - name: Package kernel modules
        run: |
          tar -czf kernel-modules-${{ env.KERNELRELEASE }}.tar.gz -C release/modules .

      - name: Upload compiled kernel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel-artifacts
          path: |
            kernel-files-${{ env.KERNELRELEASE }}.tar.gz
            kernel-modules-${{ env.KERNELRELEASE }}.tar.gz

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: 'v${{ github.run_number }}'
          release_name: 'Release ${{ github.run_number }}'
          body: 'Automated release for build ${{ github.run_number }}.'
          draft: false
          prerelease: false
          files: |
            kernel-files-${{ env.KERNELRELEASE }}.tar.gz
            kernel-modules-${{ env.KERNELRELEASE }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
